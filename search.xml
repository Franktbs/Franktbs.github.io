<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python实现导弹拦截系统</title>
      <link href="/2021/10/05/Python%E5%AE%9E%E7%8E%B0%E5%AF%BC%E5%BC%B9%E6%8B%A6%E6%88%AA%E7%B3%BB%E7%BB%9F/"/>
      <url>/2021/10/05/Python%E5%AE%9E%E7%8E%B0%E5%AF%BC%E5%BC%B9%E6%8B%A6%E6%88%AA%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1><font color="#669030">简易拦截系统</font><br /></h1><h2 id="原理">原理</h2><p>通过获取“雷达”监测到的导弹（飞行器）坐标，计算出导弹（飞行器的轨迹，从而进一步得到拦截导弹所需要的发射角度以及击中概率等问题，实现拦截系统的基本功能。</p><h2 id="基本运算">基本运算:</h2><h4 id="二次函数的解析式三点法计算">二次函数的解析式三点法计算</h4><p>$$ {\Large {\color{Orange}a=\frac{y_{1}(x_{3}-x_{2})-y_{2}(x_{3}-x_{1})+y_{3}(x_{2}-x_{1})}{(x_{3}-x_{2})(x_{3}-x_{1})(x_{2}-x_{1})}} }$$<br>$$ {\Large {\color{Violet}b=\frac{y_{2}-y_{1}-a(x_{2}^{2}-x_{1}^{2})}{x_{2}-x_{1}} }}  $$</p><h3 id="斜抛运动的轨迹方程">斜抛运动的轨迹方程</h3><p>$$ {\Large {\color{Brown} y = x\tan \theta -\frac{g}{2v_{0}^{2}\cos ^2\theta }x^2 }} $$</p><h4 id="即">即</h4><p>$$ {\Large{\color{Red} a = -\frac{g}{2v_{0}^{2}\cos ^2\theta }x^2  }} $$<br>$$ {\Large{\color{Purple} b = \tan \theta}} $$</p><h3 id="从而计算出初速度和导弹方向">从而计算出初速度和导弹方向</h3><h2 id="发射方程">发射方程</h2><p><img src="https://img-blog.csdnimg.cn/20210501154255576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaXJwVEI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>在得到导弹的轨迹方程后，我们就要计算好将在哪里将导弹拦截住<br>如图拦截系统在坐标（0，24）处<br>将在B点拦截导弹，若导弹现在处于F点处，拦截导弹的速度为 v ,则可以计算出拦截导弹的发射角度.<br>由上方程可以解得 $v_{0}$ ,设 $t$ 秒后拦截，则有方程:</p><p>$$ { v_{0}\cos\theta \cdot t + v\cos\alpha \cdot t  =14 }$$<br>$$ { v\sin\alpha\cdot t=5}$$</p><p>可将 $t$ , $\alpha$ 解出。</p><h1></h1><h1>Interception System</h1><h2 id="Author-Powered-By-Ridge-Frank-Physics-Math-Python">Author Powered By Ridge Frank, Physics, Math, Python</h2><h2 id="Theory">Theory</h2><p>By obtaining the coordinates of the missile (aircraft) monitored by the radar, the trajectory of the missile (aircraft) can be calculated, so as to further obtain the launching angle and hitting probability required for intercepting the missile, and realize the basic functions of the interception system.</p><h2 id="Basic-operation">Basic operation:</h2><h4 id="Calculation-of-quadratic-function-by-analytic-three-point-method">Calculation of quadratic function by analytic three point method</h4><p>$$ {\Large {\color{Orange}a=\frac{y_{1}(x_{3}-x_{2})-y_{2}(x_{3}-x_{1})+y_{3}(x_{2}-x_{1})}{(x_{3}-x_{2})(x_{3}-x_{1})(x_{2}-x_{1})}} }$$<br>$$ {\Large {\color{Violet}b=\frac{y_{2}-y_{1}-a(x_{2}^{2}-x_{1}^{2})}{x_{2}-x_{1}} }}  $$</p><h3 id="Trajectory-equation-of-oblique-throwing-motion">Trajectory equation of oblique throwing motion</h3><p>$$ {\Large {\color{Brown} y = x\tan \theta -\frac{g}{2v_{0}^{2}\cos ^2\theta }x^2 }} $$</p><h4 id="thus">thus</h4><p>$$ {\Large{\color{Red} a = -\frac{g}{2v_{0}^{2}\cos ^2\theta }x^2  }} $$<br>$$ {\Large{\color{Purple} b = \tan \theta}} $$</p><h3 id="The-initial-velocity-and-missile-direction-are-calculated">The initial velocity and missile direction are calculated</h3><h2 id="Emission-equation">Emission equation</h2><p><img src="https://img-blog.csdnimg.cn/20210501154515206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaXJwVEI=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>After obtaining the trajectory equation of the missile, we need to calculate where to intercept the missile. As shown in the figure, the interception system is at coordinates (0, 24) The missile will be intercepted at point B. if the missile is now at point F and the interceptor’s velocity is V, the launching angle of the interceptor can be calculated.</p><p>It can be obtained from the above equation $v_{0}$ ,Let $\mathit{t}$ be intercepted after seconds, then the equation is as follows:</p><p>$$ {\Large v_{0}\cos\theta \cdot t + v\cos\alpha \cdot t  =14 }$$<br>$$ {\Large  v\sin\alpha\cdot t=5}$$</p><p>$\mathit{t}$ and $\mathit{\alpha}$ can be solved.</p><p>Python代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在这里插入代码片</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python 导弹 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圆锥曲线仿射变换求解</title>
      <link href="/2021/10/05/%E5%9C%86%E9%94%A5%E6%9B%B2%E7%BA%BF%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2%E6%B1%82%E8%A7%A3/"/>
      <url>/2021/10/05/%E5%9C%86%E9%94%A5%E6%9B%B2%E7%BA%BF%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2%E6%B1%82%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote><p>推荐大佬的文章：<br><a href="https://zhuanlan.zhihu.com/p/33555232">【解析几何】椭圆的仿射变换（伸缩变换）</a><br>仿射变换在圆锥曲线特定题中威力很大，可以多做了解.<br>这里举一个例子：</p></blockquote><h2 id="例：已知​-A-0-2-椭圆-E-frac-x-2-a-2-frac-y-2-b-2-1-a-b-0-的离心率为-frac-sqrt-3-2-F-是椭圆的焦点，直线-AF-的斜率为-frac-2-sqrt-3-2-，-O-为坐标原点">例：已知​$ A(0,-2) $,椭圆  $E:\frac{x^{2}}{a^{2}}+\frac{y^{2}}{b^{2}}=1 (a&gt;b&gt;0) $ 的离心率为 $ \frac{\sqrt{3}}{2} $ ,  $F $  是椭圆的焦点，直线  $AF$  的斜率为 $ \frac{2\sqrt{3}}{2} $ ， O 为坐标原点.</h2><h3 id="1-求椭圆E的方程">(1)求椭圆E的方程;</h3><h3 id="2-设过点A的直线l与椭圆E交于P，Q两点，当-triangle-OPQ-面积最大时，求直线-l-的方程">(2)设过点A的直线l与椭圆E交于P，Q两点，当 $ \triangle OPQ $ 面积最大时，求直线 $l$ 的方程.</h3><h2 id="解：">解：</h2><h3 id="1-第一题较简单，略-E-frac-x-2-4-y-2-1">(1)第一题较简单，略.  $E:\frac{x^{2}}{4}+y^{2}=1 $</h3><h3 id="2-由仿射原理可知，仿射前后面积变化为原来的-frac-1-ab-，故当圆-E’-x-2-y-2-1-与直线-l’-构成的三角形-triangle-OP’Q’-面积最大时，-triangle-OPQ-面积最大。">(2)由仿射原理可知，仿射前后面积变化为原来的 $ \frac{1}{ab} $ ，故当圆 $ E’:x^{2}+y^{2}=1 $ 与直线 $ l’ $ 构成的三角形 $ \triangle OP’Q’ $ 面积最大时， $\triangle OPQ $ 面积最大。</h3><p>设原直线方程为 $ y=\frac{k}{2}·x-2 $ ，则仿射后直线方程为  $y’=kx’-2 $ ,<br>直线到圆的距离 $ d=\frac{\left| 2 \right|}{\sqrt{1+k^{2}}} $ ,<br>$P’Q’=2\sqrt{r^{2}-d^{2}}=2\sqrt{1-\frac{4}{1+k^{2}}}  $ ,<br>$S\triangle OP’Q’ = d·P’Q’=\frac{\left| 2 \right|}{\sqrt{1+k^{2}}}·2\sqrt{1-\frac{4}{1+k^{2}}}=4·\frac{\sqrt{1-\frac{4}{1+k^{2}}}}{\sqrt{1+k^{2}}}=4·\sqrt{\frac{1+k^{2}-4}{(1+k^{2})^{2}}} $ ，令  $1+k^{2} = t $ , 则原式等于 $ 4·\sqrt{\frac{t-4}{t^{2}}}​$ ,得t=8时取得最大值.<br>$k^{2}=7,k=\pm\sqrt{7},\frac{k}{2}=\pm\frac{\sqrt{7}}{2}$  ,直线方程为  $y = \pm\frac{\sqrt{7}}{2}x-2 $ ,得解.<br>关于 $ 4·\sqrt{\frac{t-4}{t^{2}}} $ 的最值可以求导，也可以用以下方法：<br>令 $ m=\frac{t-4}{t^{2}} $ ,则 $ \frac{1}{m}=\frac{t^{2}}{t-4} $ ，再用配凑法得最小值.</p><p>更新：<br><img src="/img/m.png" alt="发现一种求二次分式极值的公式"><br><a href="https://pic1.zhimg.com/80/v2-d5637a28d848b60be89809972aab0fff_720w.jpg?source=1940ef5c">原文链接</a><br>$${\color{Violet}<br>\begin{array}{l}<br>N=(A E-B D) x^{2}+2(A F-C D) X+B F-C E \<br>N=\left|\begin{array}{ll}<br>A &amp; B &amp; C \<br>D &amp; E &amp; F<br>\end{array}\right| \<br>m=\frac{t-4}{t^{2}}, N^{\prime}=\left|\begin{array}{ccc}<br>0 &amp; 1 &amp; -4 \<br>1 &amp; 0 &amp; 0<br>\end{array}\right|=-x^{2}+8 x<br>\end{array}<br>} $$</p><p>易知 $ y=-x^{2}+8x $ 的零点为0和8，易知0不可取，舍去.<br><a href="https://www.latexlive.com/#JTdCJTVDY29sb3IlN0JWaW9sZXQlN0QlMjAlMEElNUNiZWdpbiU3QmFycmF5JTdEJTdCbCU3RCUwQU49KEElMjBFLUIlMjBEKSUyMHglNUUlN0IyJTdEKzIoQSUyMEYtQyUyMEQpJTIwWCtCJTIwRi1DJTIwRSUyMCU1QyU1QyUwQU49JTVDbGVmdCU3QyU1Q2JlZ2luJTdCYXJyYXklN0QlN0JsbCU3RCUwQUElMjAmJTIwQiUyMCYlMjBDJTIwJTVDJTVDJTBBRCUyMCYlMjBFJTIwJiUyMEYlMEElNUNlbmQlN0JhcnJheSU3RCU1Q3JpZ2h0JTdDJTIwJTVDJTVDJTBBbT0lNUNmcmFjJTdCdC00JTdEJTdCdCU1RSU3QjIlN0QlN0QsJTIwTiU1RSU3QiU1Q3ByaW1lJTdEPSU1Q2xlZnQlN0MlNUNiZWdpbiU3QmFycmF5JTdEJTdCY2NjJTdEJTBBMCUyMCYlMjAxJTIwJiUyMC00JTIwJTVDJTVDJTBBMSUyMCYlMjAwJTIwJiUyMDAlMEElNUNlbmQlN0JhcnJheSU3RCU1Q3JpZ2h0JTdDPS14JTVFJTdCMiU3RCs4JTIweCUwQSU1Q2VuZCU3QmFycmF5JTdEJTBBJTdEJTIw">点击这里查看原本公式</a><br>该方法大大节省了时间和经历，特别在更为复杂的题中作用更为凸显.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python使用Pygame实现简单GUI（一） 标签和按钮</title>
      <link href="/2021/10/03/Python-GUI-Lable/"/>
      <url>/2021/10/03/Python-GUI-Lable/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="先看效果"><a href="#先看效果" class="headerlink" title="先看效果"></a>先看效果</h2><p>按钮和标签（字体，字体颜色，背景颜色以及移动到按钮上时的字体颜色，背景颜色均可任意修改）<br><img src="https://img-blog.csdnimg.cn/20210212124243955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaXJwVEI=,size_16,color_FFFFFF,t_70#pic_center" alt="按钮和标签（字体，字体颜色，背景颜色均可任意修改）"><br>鼠标移动到按钮上时：<br><img src="https://img-blog.csdnimg.cn/20210212124617800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaXJwVEI=,size_16,color_FFFFFF,t_70#pic_center" alt="当鼠标移动到按钮上时"></p><h2 id="需要"><a href="#需要" class="headerlink" title="需要"></a>需要</h2><ul><li><em>python3.x</em></li><li><em>pygame</em></li></ul><p> <strong>安装python</strong></p><p> 直接去<a href="https://www.python.org/">官网</a>下载，安装时一路Next即可.注意安装3.x版本的.</p><p> <strong>安装pygame</strong></p><p><kbd>Ctrl</kbd>+<kbd>R</kbd> :打开命令提示符</p><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pygame</span><br></pre></td></tr></table></figure><p>等待安装完毕.</p><p><strong>测试pygame是否安装成功</strong><br>在命令提示符中输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python</span><br></pre></td></tr></table></figure><p>然后输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import pygame</span><br></pre></td></tr></table></figure><p>如果弹出类似于：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pygame 2.0.1 (SDL 2.0.14, Python 3.7.0)</span><br><span class="line">Hello from the pygame community. https://www.pygame.org/contribute.html</span><br></pre></td></tr></table></figure><p>说明已经安装成功了.<br>如果是这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ModuleNotFoundError: No module named &#x27;pygame&#x27;</span><br></pre></td></tr></table></figure><p>百度寻找原因，这里不再赘述.</p><h2 id="写库"><a href="#写库" class="headerlink" title="写库"></a>写库</h2><p>直接上代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame <span class="comment"># 导入pygame库</span></span><br><span class="line">comp = [] <span class="comment"># 储存组件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span>(<span class="params">size, title</span>):</span> <span class="comment"># 初始化，明确窗口的大小和标题</span></span><br><span class="line">    pygame.init()</span><br><span class="line">    screen = pygame.display.set_mode(size)</span><br><span class="line">    pygame.display.set_caption(title)</span><br><span class="line">    <span class="keyword">return</span> screen<span class="comment"># 返回screen后面用</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listening</span>():</span> <span class="comment"># 监听鼠标事件</span></span><br><span class="line">    x, y = pygame.mouse.get_pos() <span class="comment"># 获取鼠标位置</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> comp: <span class="comment"># 遍历组件</span></span><br><span class="line">        <span class="keyword">if</span> m[-<span class="number">1</span>][<span class="number">0</span>] &lt;= x &lt;= m[-<span class="number">1</span>][<span class="number">0</span>]+m[-<span class="number">1</span>][<span class="number">2</span>] <span class="keyword">and</span> m[-<span class="number">1</span>][<span class="number">1</span>] &lt;= y &lt;= m[-<span class="number">1</span>][<span class="number">3</span>]+m[-<span class="number">1</span>][<span class="number">1</span>]: <span class="comment"># 判断鼠标是否在组件上</span></span><br><span class="line">            m[-<span class="number">2</span>] = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            m[-<span class="number">2</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">button</span>(<span class="params">size, position, font, font_color, background,</span></span></span><br><span class="line"><span class="params"><span class="function">           click_f_color, click_background, func, edge=<span class="number">5</span>, width=<span class="number">0</span>, title=<span class="string">&quot;Button&quot;</span></span>):</span> <span class="comment"># 添加按钮组件</span></span><br><span class="line">    if_click = <span class="literal">False</span></span><br><span class="line">    crash_rect = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>] <span class="comment"># “碰撞体”，鼠标在这个范围算碰撞</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&quot;bu&quot;</span>, title, position, font, background, font_color,</span><br><span class="line">            size, width, click_f_color, click_background, func, edge, if_click, crash_rect]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">label</span>(<span class="params">size, position, font, font_color, background=<span class="number">0</span>, title=<span class="string">&quot;Label&quot;</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">          edge=<span class="number">5</span>, width=<span class="number">0</span></span>):</span> <span class="comment"># 标签组件</span></span><br><span class="line">    if_click = <span class="literal">False</span></span><br><span class="line">    crash_rect = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&quot;la&quot;</span>, title, position, font, background, font_color, size, width, edge, if_click, crash_rect]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register_cp</span>(<span class="params">way</span>):</span> <span class="comment"># 注册组件</span></span><br><span class="line">    comp.append(way)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_objects</span>(<span class="params">text, font, color</span>):</span> <span class="comment"># 定义文字</span></span><br><span class="line">    text_surface = font.render(text, <span class="literal">True</span>, color)</span><br><span class="line">    <span class="keyword">return</span> text_surface, text_surface.get_rect()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">display</span>(<span class="params">scr, com</span>):</span> <span class="comment"># 显示组件</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> com:</span><br><span class="line">        <span class="keyword">if</span> n[<span class="number">0</span>] == <span class="string">&quot;bu&quot;</span>:    <span class="comment"># 如果是按钮</span></span><br><span class="line">            <span class="keyword">if</span> n[<span class="number">12</span>]:   <span class="comment"># 判断是否点击</span></span><br><span class="line">                large_text = pygame.font.Font(n[<span class="number">3</span>], n[<span class="number">6</span>])</span><br><span class="line">                text_surf, text_rect = text_objects(n[<span class="number">1</span>], large_text, n[<span class="number">8</span>])</span><br><span class="line">                text_rect.center = n[<span class="number">2</span>]</span><br><span class="line">                pygame.draw.rect(scr, n[<span class="number">9</span>], (text_rect.left - n[<span class="number">11</span>],</span><br><span class="line">                                             text_rect.top - n[<span class="number">11</span>],</span><br><span class="line">                                             text_rect.width + n[<span class="number">11</span>] * <span class="number">2</span>,</span><br><span class="line">                                             text_rect.height + n[<span class="number">11</span>] * <span class="number">2</span>), n[<span class="number">7</span>])</span><br><span class="line">                scr.blit(text_surf, text_rect) <span class="comment"># 把字刻在屏幕上</span></span><br><span class="line">                n[<span class="number">13</span>] = text_rect</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                large_text = pygame.font.Font(n[<span class="number">3</span>], n[<span class="number">6</span>])</span><br><span class="line">                text_surf, text_rect = text_objects(n[<span class="number">1</span>], large_text, n[<span class="number">5</span>])</span><br><span class="line">                text_rect.center = n[<span class="number">2</span>]</span><br><span class="line">                pygame.draw.rect(scr, n[<span class="number">4</span>], (text_rect.left-n[<span class="number">11</span>],</span><br><span class="line">                                             text_rect.top-n[<span class="number">11</span>],</span><br><span class="line">                                             text_rect.width+n[<span class="number">11</span>]*<span class="number">2</span>,</span><br><span class="line">                                             text_rect.height+n[<span class="number">11</span>]*<span class="number">2</span>), n[<span class="number">7</span>])</span><br><span class="line">                scr.blit(text_surf, text_rect)</span><br><span class="line">                n[<span class="number">13</span>] = text_rect</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> n[<span class="number">0</span>] == <span class="string">&quot;la&quot;</span>:    <span class="comment"># 如果是标签 &#x27;freesansbold.ttf&#x27;, 115</span></span><br><span class="line">            large_text = pygame.font.Font(n[<span class="number">3</span>], n[<span class="number">6</span>])</span><br><span class="line">            text_surf, text_rect = text_objects(n[<span class="number">1</span>], large_text, n[<span class="number">5</span>])</span><br><span class="line">            text_rect.center = n[<span class="number">2</span>]</span><br><span class="line">            <span class="keyword">if</span> n[<span class="number">4</span>] != <span class="number">0</span>:</span><br><span class="line">                pygame.draw.rect(scr, n[<span class="number">4</span>], (text_rect.left-n[-<span class="number">3</span>],</span><br><span class="line">                                             text_rect.top-n[-<span class="number">3</span>],</span><br><span class="line">                                             text_rect.width+n[-<span class="number">3</span>]*<span class="number">2</span>,</span><br><span class="line">                                             text_rect.height+n[-<span class="number">3</span>]*<span class="number">2</span>), n[-<span class="number">2</span>])</span><br><span class="line">            scr.blit(text_surf, text_rect)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">scr, background</span>):</span> <span class="comment"># 主循环</span></span><br><span class="line">    go_on = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> go_on:</span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT: <span class="comment"># 如果点击关闭窗口，则循环结束</span></span><br><span class="line">                go_on = <span class="literal">False</span></span><br><span class="line">        scr.fill(background) <span class="comment"># 设置屏幕背景色</span></span><br><span class="line">        display(scr, comp)</span><br><span class="line">        listening()</span><br><span class="line">        pygame.display.update() <span class="comment"># 更新屏幕</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="程序方面"><a href="#程序方面" class="headerlink" title="程序方面"></a>程序方面</h2><p>自由发挥，<br>前面图里的效果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> main</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_hello</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">scr = main.init((<span class="number">600</span>, <span class="number">600</span>), <span class="string">&quot;Test&quot;</span>)</span><br><span class="line">la1 = main.label(<span class="number">30</span>, (<span class="number">100</span>, <span class="number">100</span>), <span class="string">&quot;freesansbold.ttf&quot;</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>),</span><br><span class="line">                 (<span class="number">55</span>, <span class="number">55</span>, <span class="number">55</span>), <span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line">bu1 = main.button(<span class="number">30</span>, (<span class="number">300</span>, <span class="number">300</span>), <span class="string">&quot;freesansbold.ttf&quot;</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>),</span><br><span class="line">                  (<span class="number">55</span>, <span class="number">55</span>, <span class="number">55</span>), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), (<span class="number">155</span>, <span class="number">155</span>, <span class="number">155</span>), say_hello)</span><br><span class="line"></span><br><span class="line">main.register_cp(la1)</span><br><span class="line">main.register_cp(bu1)</span><br><span class="line"></span><br><span class="line">main.run(scr, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意前面两个文件要放在同一个文件夹里.<br>不然，</p><blockquote><p>import main</p></blockquote><p>会出错.<br>后期会陆续添加一些组件,例如输入框，进度条等.</p><p><strong>Thank for reading!</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-使用Opencv对图片进行透明加层处理</title>
      <link href="/2021/10/03/Python-Opencv-Image/"/>
      <url>/2021/10/03/Python-Opencv-Image/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Opencv中对于图片的处理"><a href="#Python-Opencv中对于图片的处理" class="headerlink" title="Python Opencv中对于图片的处理"></a>Python Opencv中对于图片的处理</h1><p>先看成效：<br>处理前：<br><img src="https://img-blog.csdnimg.cn/20200227161956325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaXJwVEI=,size_16,color_FFFFFF,t_70" alt="处理前"><br>处理后：<br><img src="https://img-blog.csdnimg.cn/20200227162047275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaXJwVEI=,size_16,color_FFFFFF,t_70" alt="使用BGR(200, 145, 162)"><br>再来一张：<br><img src="https://img-blog.csdnimg.cn/20200227162200720.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaXJwVEI=,size_16,color_FFFFFF,t_70" alt="使用BGR(100, 145, 162)"><br>OK,现在来瞧一瞧如何使用超级简单的方法实现这一处理：<br>首先，基本的导入模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><p>下一步，自然是载入图片：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image = cv2.imread(<span class="string">&quot;01.jpg&quot;</span>, cv2.IMREAD_COLOR)</span><br></pre></td></tr></table></figure><p>然后把它显示出来：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cv2.imshow(<span class="string">&quot;Work&quot;</span>, image)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>咋一看，处理呢？别急，现在开始写.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_image</span>(<span class="params">img, size, color</span>):</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(size[<span class="number">0</span>][<span class="number">0</span>], size[<span class="number">1</span>][<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(size[<span class="number">0</span>][<span class="number">1</span>], size[<span class="number">1</span>][<span class="number">1</span>]):</span><br><span class="line">            <span class="keyword">for</span> rgb <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">                c = img.item(x, y, rgb)</span><br><span class="line">                c += color[rgb]</span><br><span class="line">                c = <span class="number">0.5</span>*c</span><br><span class="line">                img.itemset((x, y, rgb), c)</span><br></pre></td></tr></table></figure><p>我们来分析一下这段代码：</p><p>  第一行 def handle_image(img, size, color):</p><ul><li>img 就是要处理的矩阵，也就是窗口</li><li>size也就是要进行透明处理的范围，是一个数组，结构：[[左上角横坐标，左上角纵坐标]，[右下角横坐标，右下角纵坐标]]，即[[x1,y1],[x2,y2]]</li><li>color自然就是有色玻璃的颜色了</li></ul><p>第二行 for x in range(size[0][0], size[1][0]):</p><ul><li>进行一个循环，从x1到x2</li></ul><p> 第三行 for y in range(size[0][1], size[1][1]):</p><ul><li>一样的道理</li></ul><p> 第四行 for rgb in range(3):</p><ul><li>通道的循环</li></ul><p>自此，该循环已将size中的所有像素的RGB都遍历了一遍<br>接下来就很简单了，<br>先获得（x，y）这像素rgb的值（这里的rgb其实只为其中一个）<br>c = img.item(x, y, rgb)<br>将有色玻璃的对应的值与原颜色值相加<br>c += color[rgb]<br>颜色相加原则，再除以2<br>c = 0.5*c<br>然后把它写回去<br>img.itemset((x, y, rgb), c)<br>这样，就完成了&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br>来，放全部代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">RED = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">GREEN = (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_image</span>(<span class="params">img, size, color</span>):</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(size[<span class="number">0</span>][<span class="number">0</span>], size[<span class="number">1</span>][<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(size[<span class="number">0</span>][<span class="number">1</span>], size[<span class="number">1</span>][<span class="number">1</span>]):</span><br><span class="line">            <span class="keyword">for</span> rgb <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">                c = img.item(x, y, rgb)</span><br><span class="line">                c += color[rgb]</span><br><span class="line">                c = <span class="number">0.5</span>*c</span><br><span class="line">                img.itemset((x, y, rgb), c)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># image = np.zeros([600, 600, 3])</span></span><br><span class="line"><span class="comment"># cv2.circle(image, (300, 300), 100, GREEN, 5)</span></span><br><span class="line">image = cv2.imread(<span class="string">&quot;01.jpg&quot;</span>, cv2.IMREAD_COLOR)</span><br><span class="line">handle_image(image, ((<span class="number">100</span>, <span class="number">100</span>), (<span class="number">500</span>, <span class="number">500</span>)), (<span class="number">100</span>, <span class="number">145</span>, <span class="number">162</span>))</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">&quot;Work&quot;</span>, image)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>代码中注释的两行说明…<br>对，只要是图像，都可以处理！<br><img src="https://img-blog.csdnimg.cn/20200227170454336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaXJwVEI=,size_16,color_FFFFFF,t_70" alt="before"><br><img src="https://img-blog.csdnimg.cn/20200227170520799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaXJwVEI=,size_16,color_FFFFFF,t_70" alt="after"><br>哈哈，数了数才25行代码，<br>嗯，人生苦短，我用python.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python Opencv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 实现三体模拟</title>
      <link href="/2021/10/03/PythonAndThreeBodyProblem/"/>
      <url>/2021/10/03/PythonAndThreeBodyProblem/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>三体是一部伟大的小说，其中三体运动的不确定性奠定了整部小说的基石，这篇博客将简单介绍实现三体模拟的一种思路，使用Python和它的库Pygame实现。<br>建议配合音乐食用.</p>    <div id="aplayer-bNMbsMIp" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="001HGu5r2X2t6f" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>消灭人类暴政，世界属于三体！</p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>V1.0.10版<br><img src="https://img-blog.csdnimg.cn/2020031223434757.gif" alt="效果"><br>新增添加物体功能<br>移除物体功能<br>稍微加快了一点点</p><h1 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h1><p>对于N体模拟，可以这样思考</p><ul><li>计算出一个系统中每一个对象（物体Object）的受力情况</li><li>根据受力情况计算出每一个物体受的合力</li><li>该物体下一帧运动的速度和方向就是所受合力的大小和方向</li></ul><p> 通过这种方法，就可以简单的模拟出N体运动</p><h1 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h1><h2 id="1-向量"><a href="#1-向量" class="headerlink" title="1.向量"></a>1.向量</h2><p>向量，也称矢量，是一种具有大小和方向的量<br>它可以用一个箭头表示<br><img src="https://img-blog.csdnimg.cn/20200305231203298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoaXJwVEI=,size_16,color_FFFFFF,t_70" alt="可以用箭头表示"><br>在坐标系中，可以表示为<br>a[3.1]<br>[-2.9]<br><img src="https://img-blog.csdnimg.cn/20200305231734986.jpg" alt="表示方法"><br>涉及向量的原因是力本身就表示为一个向量<br>例如：<br>一个苹果受到10N的重力，在这里10N是力的大小，而方向则是竖直向下</p><h2 id="2-合力的计算"><a href="#2-合力的计算" class="headerlink" title="2.合力的计算"></a>2.合力的计算</h2><p>合力的计算其实也就是向量的加法<br>根据平行四边形法则：<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zczEuYmRzdGF0aWMuY29tLzcwY0Z1WFNoX1ExWW54R2twb1dLMUhGNmhoeS9pdC91PTE4NjgzMDk2NTIsMjcxMDcxMjIwNSZmbT0yNiZncD0wLmpwZw?x-oss-process=image/format,png" alt="平行四边形法则"><br>图甲中F1和F2的合力为F<br>如果<br>F1表示为[100,0]<br>F2表示为[10,60]<br>那么F就可以表示为[110，60]<br>至于图乙其实与图甲是一样的<br>那么，问题来了，物体的受力情况不一定仅有两个啊，怎么办呢？<br>其实，我们可以两个两个力的算，直到把所有力都算完，就得到了一个最终的合力了</p><h2 id="3-引力的计算"><a href="#3-引力的计算" class="headerlink" title="3.引力的计算"></a>3.引力的计算</h2><p>两个可看作质点的物体之间的万有引力，可以用以下公式计算：<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ia2ltZy5jZG4uYmNlYm9zLmNvbS9waWMvM2JmMzNhODdlOTUwMzUyYTAwYmY5ZGZkNWY0M2ZiZjJiMzExOGI2ZA?x-oss-process=image/format,png" alt="万有引力公式"><br>即万有引力等于引力常量乘以两物体质量的乘积 除以它们距离的平方。</p><p>也就是说，引力与两物体之间距离的平方成反比，<br>而与两物体质量的乘积成正比</p><p>说人话就是靠的近引力就大，靠的远引力就小<br>在同样的距离时，质量越大引力越大，反之亦然</p><h2 id="4-python的运用"><a href="#4-python的运用" class="headerlink" title="4.python的运用"></a>4.python的运用</h2><p>你需要拥有这些：</p><ul><li>python的基本语法</li><li>pygame库的用法</li><li>一个IDE，所谓磨刀不误砍柴工，个人推荐PyCharm</li><li>以及…伊文斯的介绍信，嗯，很好，组织没有看错你 ^ _ ^</li></ul><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>所有的代码都在最后<br>先从头开始吧：<br>注意，如果你对 类（class）不熟悉，那请点</p><h2 id="系统（system）"><a href="#系统（system）" class="headerlink" title="系统（system）"></a>系统（system）</h2><p>总要有一个系统来容纳一切吧！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">System</span>(<span class="params"><span class="built_in">object</span></span>):</span><span class="comment"># 继承object类</span></span><br><span class="line">    name = <span class="string">&quot;&quot;</span></span><br><span class="line">    objects = []<span class="comment"># 所有的对象（物体）都在这里</span></span><br></pre></td></tr></table></figure><p>非常简单的一个类，不过还应该来点东西</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">self.name = name<span class="comment"># 在建立系统的时候有一个名字的！</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_object</span>(<span class="params">self, obj</span>):</span><span class="comment"># 添加物体</span></span><br><span class="line">self.objects.append(obj)</span><br></pre></td></tr></table></figure><p>嗯，基本的东西以及好了，下面需要一个可以制造物体的神了！</p><h2 id="物体（object）"><a href="#物体（object）" class="headerlink" title="物体（object）"></a>物体（object）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Objects</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    mass = <span class="number">0</span>        <span class="comment"># 质量</span></span><br><span class="line">    power = []      <span class="comment"># 受到的力，矢量[大小，方向]</span></span><br><span class="line">    speed = []      <span class="comment"># 加速度，矢量[大小，方向]</span></span><br><span class="line">    position = []   <span class="comment"># 位置</span></span><br><span class="line">    position_ = []  <span class="comment"># 最初位置</span></span><br><span class="line">    move_to = []    <span class="comment"># 下一帧移动的距离，方向</span></span><br><span class="line">    positions = []  <span class="comment"># 所有的点</span></span><br><span class="line">    volume = <span class="number">0</span>      <span class="comment"># 体积</span></span><br><span class="line">    color = []      <span class="comment"># 颜色</span></span><br><span class="line">    name = <span class="string">&quot;&quot;</span>       <span class="comment"># 名字</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, mass, speed, position, volume, color</span>):</span></span><br><span class="line">        self.mass = mass</span><br><span class="line">        self.position = position</span><br><span class="line">        self.volume = volume</span><br><span class="line">        self.speed = speed</span><br><span class="line">        self.color = color</span><br><span class="line">        self.name = name</span><br><span class="line">        self.positions.append(position[:])</span><br><span class="line">        self.position_ = position[:]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这一次要多一点，但都很简单，在创作一个物体时当然需要很多数据！</p><h2 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h2><p>到目前为止，我们拥有了一个系统，拥有了可以创造物体的神<br>但它们不会动，这显然是无聊的，于是在系统中加入了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work_power</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> self.objects:<span class="comment"># 遍历系统中的所有物体</span></span><br><span class="line">        obj.power = []<span class="comment"># 把它们的受力情况清空</span></span><br><span class="line">        <span class="keyword">if</span> obj.speed == [<span class="number">0</span>, <span class="number">0</span>]:<span class="comment"># 如果加速度为0，则跳过</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:<span class="comment"># 否则将加速度变成力（物体的加速度可以看作一种力（根据F=am））</span></span><br><span class="line">            obj.speed[<span class="number">0</span>] = obj.speed[<span class="number">0</span>] * obj.mass</span><br><span class="line">            obj.speed[<span class="number">1</span>] = obj.speed[<span class="number">1</span>] * obj.mass</span><br><span class="line">            obj.power.append(obj.speed)<span class="comment"># 把惯性力添加到受力情况中</span></span><br><span class="line">        <span class="keyword">for</span> o <span class="keyword">in</span> self.objects:<span class="comment"># 遍历其他物体</span></span><br><span class="line">            v0 = o.position[<span class="number">0</span>] - obj.position[<span class="number">0</span>]<span class="comment"># 算x轴上的距离</span></span><br><span class="line">            v1 = o.position[<span class="number">1</span>] - obj.position[<span class="number">1</span>]<span class="comment"># 算y轴上的距离</span></span><br><span class="line">            distance_2 = v0 ** <span class="number">2</span> + v1 ** <span class="number">2</span><span class="comment"># 算距离，根据勾股定理</span></span><br><span class="line">            <span class="keyword">if</span> distance_2 == <span class="number">0</span>:<span class="comment"># 如果距离为0，则不受力</span></span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                v0 *= G/distance_2*(obj.mass*o.mass)<span class="comment"># 根据万有引力公式算引力向量</span></span><br><span class="line">                v1 *= G/distance_2*(obj.mass*o.mass)</span><br><span class="line">                obj.power.append([v0, v1])<span class="comment"># 将引力添加到改物体的受力情况中</span></span><br></pre></td></tr></table></figure><p>上面的代码算出了每个物体的受力情况<br>但合力却没有算…<br>那就再来个方法把！（在system类中）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work_force</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> self.objects:<span class="comment"># 依然是遍历每个物体</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(obj.power) - <span class="number">1</span>):<span class="comment"># 遍历物体所受的每一个力</span></span><br><span class="line">            f1 = obj.power[<span class="number">0</span>]<span class="comment"># 把它们取出来</span></span><br><span class="line">            f2 = obj.power[<span class="number">1</span>]</span><br><span class="line">            f_t = [f1[<span class="number">0</span>]+f2[<span class="number">0</span>], f1[<span class="number">1</span>]+f2[<span class="number">1</span>]]<span class="comment"># 根据合力的算法将合力算出来</span></span><br><span class="line">            <span class="keyword">del</span> obj.power[<span class="number">0</span>]<span class="comment"># 把算过的的力删掉</span></span><br><span class="line">            <span class="keyword">del</span> obj.power[<span class="number">0</span>]</span><br><span class="line">            obj.power.append(f_t)<span class="comment"># 把合力添加进去</span></span><br><span class="line">        obj.position[<span class="number">0</span>] += obj.power[<span class="number">0</span>][<span class="number">0</span>]/obj.mass<span class="comment"># 将物体的位置沿合力的方向移动</span></span><br><span class="line">        obj.position[<span class="number">1</span>] += obj.power[<span class="number">0</span>][<span class="number">1</span>]/obj.mass</span><br><span class="line">        obj.speed = [obj.power[<span class="number">0</span>][<span class="number">0</span>]/obj.mass, obj.power[<span class="number">0</span>][<span class="number">1</span>]/obj.mass]<span class="comment">#将合力变为加速度</span></span><br></pre></td></tr></table></figure><p>OK,计算部分也完成了<br>但，我们看不见啊，看不见慌的很啊！</p><h2 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h2><p>轨道的实现其实是pygame中aalines方法的作用，<br>通过收集最近经过的点绘制 “曲线”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">display</span>(<span class="params">self, scr, show_orbit, length=<span class="number">500</span></span>):</span><span class="comment"># 接受3个参数，scr就是pygame的screen， show_orbit则是是否显示轨道，length就是轨道的长度</span></span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> self.objects:<span class="comment"># 遍历遍历</span></span><br><span class="line">        pygame.draw.circle(scr, obj.color, (<span class="built_in">int</span>(obj.position[<span class="number">0</span>]), <span class="built_in">int</span>(obj.position[<span class="number">1</span>])), obj.volume)<span class="comment"># 给我画下来！</span></span><br><span class="line">        <span class="keyword">if</span> show_orbit:<span class="comment"># 如果要显示的话</span></span><br><span class="line">            obj.positions = obj.positions[:]</span><br><span class="line">            obj.positions.insert(<span class="number">0</span>, [<span class="built_in">int</span>(obj.position[<span class="number">0</span>]), <span class="built_in">int</span>(obj.position[<span class="number">1</span>])])<span class="comment"># 收集点</span></span><br><span class="line">            pygame.draw.aalines(scr, obj.color, <span class="literal">False</span>, obj.positions, <span class="number">3</span>)<span class="comment"># 画轨道</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(obj.positions) &gt; length:<span class="comment"># 让轨道在长度之后消失</span></span><br><span class="line">                <span class="keyword">del</span> obj.positions[-<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">len</span>(obj.positions) &gt; <span class="built_in">len</span>(self.objects):<span class="comment"># 解决一个互传问题</span></span><br><span class="line">                <span class="keyword">if</span> obj.position_ <span class="keyword">in</span> obj.positions:</span><br><span class="line">                    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(self.objects)):</span><br><span class="line">                        <span class="keyword">del</span> obj.positions[-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>除了图像，我们还需要一些数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">display_data</span>(<span class="params">self, scr, c</span>):</span></span><br><span class="line">    font = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">    fps = font.render(<span class="string">&quot;FPS: &quot;</span>+<span class="built_in">str</span>(<span class="built_in">round</span>(c.get_fps(), <span class="number">2</span>)), <span class="literal">False</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">    scr.blit(fps, (<span class="number">50</span>, <span class="number">50</span>))</span><br><span class="line">    <span class="keyword">if</span> self.objects:</span><br><span class="line">        <span class="keyword">for</span> index, obj <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.objects):</span><br><span class="line">            pos = font.render(obj.name+<span class="string">&quot;: &quot;</span>+<span class="built_in">str</span>(<span class="built_in">int</span>(obj.position[<span class="number">0</span>])) + <span class="string">&quot;  &quot;</span> +</span><br><span class="line">                              <span class="built_in">str</span>(<span class="built_in">int</span>(obj.position[<span class="number">1</span>])), <span class="literal">False</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">            scr.blit(pos, (<span class="number">50</span>, <span class="number">80</span>+index*<span class="number">35</span>))</span><br></pre></td></tr></table></figure><p>这里不再过多解释，可以自行百度</p><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>完成一切后，<br>就可以疯狂的调用了<br>来一波四体运动！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">universe = System(<span class="string">&quot;Earth University&quot;</span>)</span><br><span class="line"></span><br><span class="line">earth = Objects(<span class="string">&quot;Earth&quot;</span>, <span class="number">1000</span>, [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">200</span>, <span class="number">200</span>], <span class="number">5</span>, [<span class="number">115</span>, <span class="number">15</span>, <span class="number">249</span>])</span><br><span class="line">sun = Objects(<span class="string">&quot;Sun&quot;</span>, <span class="number">1000</span>, [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">500</span>, <span class="number">600</span>], <span class="number">5</span>, [<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line">moon = Objects(<span class="string">&quot;Moon&quot;</span>, <span class="number">1000</span>, [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">500</span>, <span class="number">300</span>], <span class="number">5</span>, [<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>])</span><br><span class="line">mars = Objects(<span class="string">&quot;Mars&quot;</span>, <span class="number">1000</span>, [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">600</span>, <span class="number">400</span>], <span class="number">5</span>, [<span class="number">15</span>, <span class="number">215</span>, <span class="number">249</span>])</span><br><span class="line"></span><br><span class="line">universe.add_object(earth)</span><br><span class="line">universe.add_object(sun)</span><br><span class="line">universe.add_object(moon)</span><br><span class="line">universe.add_object(mars)</span><br><span class="line"></span><br><span class="line">universe.work_power()</span><br><span class="line">universe.work_force()</span><br><span class="line"></span><br><span class="line">pygame.init()</span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line">screen = pygame.display.set_mode([<span class="number">1500</span>, <span class="number">1200</span>])</span><br><span class="line">pygame.display.set_caption(<span class="string">&quot;Force&quot;</span>)</span><br><span class="line"></span><br><span class="line">keep = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> keep:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">            keep = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    screen.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    universe.work_power()</span><br><span class="line">    universe.work_force()</span><br><span class="line">    universe.display(screen, <span class="literal">True</span>)</span><br><span class="line">    universe.display_data(screen, clock)</span><br><span class="line"></span><br><span class="line">    pygame.display.update()</span><br><span class="line">    clock.tick(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">pygame.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>是不是超级简单啊？<br>OK，全部代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">万有引力公式：</span></span><br><span class="line"><span class="string">F = G * (m1*m2)/r**2</span></span><br><span class="line"><span class="string">其中 F 为受某力的大小，m1,m2分别为两物体的质量，r为距离</span></span><br><span class="line"><span class="string">牛顿第二定律：</span></span><br><span class="line"><span class="string">F = am</span></span><br><span class="line"><span class="string">a为加速度</span></span><br><span class="line"><span class="string">m为物体质量</span></span><br><span class="line"><span class="string">推导公式：</span></span><br><span class="line"><span class="string">a = F/m</span></span><br><span class="line"><span class="string">m = F/a</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> G, PI</span><br><span class="line">G = <span class="number">6.754</span>*<span class="number">0.00001</span></span><br><span class="line">PI = <span class="number">3.14159265358979323</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">System</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    name = <span class="string">&quot;&quot;</span></span><br><span class="line">    objects = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_object</span>(<span class="params">self, obj</span>):</span></span><br><span class="line">        self.objects.append(obj)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work_power</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> obj <span class="keyword">in</span> self.objects:</span><br><span class="line">            obj.power = []</span><br><span class="line">            <span class="keyword">if</span> obj.speed == [<span class="number">0</span>, <span class="number">0</span>]:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                obj.speed[<span class="number">0</span>] = obj.speed[<span class="number">0</span>] * obj.mass</span><br><span class="line">                obj.speed[<span class="number">1</span>] = obj.speed[<span class="number">1</span>] * obj.mass</span><br><span class="line">                obj.power.append(obj.speed)</span><br><span class="line">            <span class="keyword">for</span> o <span class="keyword">in</span> self.objects:</span><br><span class="line">                v0 = o.position[<span class="number">0</span>] - obj.position[<span class="number">0</span>]</span><br><span class="line">                v1 = o.position[<span class="number">1</span>] - obj.position[<span class="number">1</span>]</span><br><span class="line">                distance_2 = v0 ** <span class="number">2</span> + v1 ** <span class="number">2</span></span><br><span class="line">                <span class="keyword">if</span> distance_2 == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    v0 *= G/distance_2*(obj.mass*o.mass)</span><br><span class="line">                    v1 *= G/distance_2*(obj.mass*o.mass)</span><br><span class="line">                    obj.power.append([v0, v1])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work_force</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> obj <span class="keyword">in</span> self.objects:</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(obj.power) - <span class="number">1</span>):</span><br><span class="line">                f1 = obj.power[<span class="number">0</span>]</span><br><span class="line">                f2 = obj.power[<span class="number">1</span>]</span><br><span class="line">                f_t = [f1[<span class="number">0</span>]+f2[<span class="number">0</span>], f1[<span class="number">1</span>]+f2[<span class="number">1</span>]]</span><br><span class="line">                <span class="keyword">del</span> obj.power[<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">del</span> obj.power[<span class="number">0</span>]</span><br><span class="line">                obj.power.append(f_t)</span><br><span class="line">            obj.position[<span class="number">0</span>] += obj.power[<span class="number">0</span>][<span class="number">0</span>]/obj.mass</span><br><span class="line">            obj.position[<span class="number">1</span>] += obj.power[<span class="number">0</span>][<span class="number">1</span>]/obj.mass</span><br><span class="line">            obj.speed = [obj.power[<span class="number">0</span>][<span class="number">0</span>]/obj.mass, obj.power[<span class="number">0</span>][<span class="number">1</span>]/obj.mass]</span><br><span class="line">            <span class="comment"># print(obj.speed)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">display</span>(<span class="params">self, scr, show_orbit, length=<span class="number">500</span></span>):</span></span><br><span class="line">        <span class="keyword">for</span> obj <span class="keyword">in</span> self.objects:</span><br><span class="line">            pygame.draw.circle(scr, obj.color, (<span class="built_in">int</span>(obj.position[<span class="number">0</span>]), <span class="built_in">int</span>(obj.position[<span class="number">1</span>])), obj.volume)</span><br><span class="line">            <span class="keyword">if</span> show_orbit:</span><br><span class="line">                obj.positions = obj.positions[:]</span><br><span class="line">                obj.positions.insert(<span class="number">0</span>, [<span class="built_in">int</span>(obj.position[<span class="number">0</span>]), <span class="built_in">int</span>(obj.position[<span class="number">1</span>])])</span><br><span class="line">                pygame.draw.aalines(scr, obj.color, <span class="literal">False</span>, obj.positions, <span class="number">3</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(obj.positions) &gt; length:</span><br><span class="line">                    <span class="keyword">del</span> obj.positions[-<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">elif</span> <span class="built_in">len</span>(obj.positions) &gt; <span class="built_in">len</span>(self.objects):</span><br><span class="line">                    <span class="keyword">if</span> obj.position_ <span class="keyword">in</span> obj.positions:</span><br><span class="line">                        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(self.objects)):</span><br><span class="line">                            <span class="keyword">del</span> obj.positions[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">display_data</span>(<span class="params">self, scr, c</span>):</span></span><br><span class="line">        font = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">        fps = font.render(<span class="string">&quot;FPS: &quot;</span>+<span class="built_in">str</span>(<span class="built_in">round</span>(c.get_fps(), <span class="number">2</span>)), <span class="literal">False</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">        scr.blit(fps, (<span class="number">50</span>, <span class="number">50</span>))</span><br><span class="line">        <span class="keyword">if</span> self.objects:</span><br><span class="line">            <span class="keyword">for</span> index, obj <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.objects):</span><br><span class="line">                pos = font.render(obj.name+<span class="string">&quot;: &quot;</span>+<span class="built_in">str</span>(<span class="built_in">int</span>(obj.position[<span class="number">0</span>])) + <span class="string">&quot;  &quot;</span> +</span><br><span class="line">                                  <span class="built_in">str</span>(<span class="built_in">int</span>(obj.position[<span class="number">1</span>])), <span class="literal">False</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">                scr.blit(pos, (<span class="number">50</span>, <span class="number">80</span>+index*<span class="number">35</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Objects</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    mass = <span class="number">0</span>        <span class="comment"># 质量</span></span><br><span class="line">    power = []      <span class="comment"># 受到的力，矢量[大小，方向]</span></span><br><span class="line">    speed = []      <span class="comment"># 初速度，矢量[大小，方向]</span></span><br><span class="line">    position = []   <span class="comment"># 位置</span></span><br><span class="line">    position_ = []  <span class="comment"># 最初位置</span></span><br><span class="line">    move_to = []    <span class="comment"># 下一帧移动的距离，方向</span></span><br><span class="line">    positions = []  <span class="comment"># 所有的点</span></span><br><span class="line">    volume = <span class="number">0</span>      <span class="comment"># 体积</span></span><br><span class="line">    color = []      <span class="comment"># 颜色</span></span><br><span class="line">    name = <span class="string">&quot;&quot;</span>       <span class="comment"># 名字</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, mass, speed, position, volume, color</span>):</span></span><br><span class="line">        self.mass = mass</span><br><span class="line">        self.position = position</span><br><span class="line">        self.volume = volume</span><br><span class="line">        self.speed = speed</span><br><span class="line">        self.color = color</span><br><span class="line">        self.name = name</span><br><span class="line">        self.positions.append(position[:])</span><br><span class="line">        self.position_ = position[:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">universe = System(<span class="string">&quot;Earth University&quot;</span>)</span><br><span class="line"></span><br><span class="line">earth = Objects(<span class="string">&quot;Earth&quot;</span>, <span class="number">1000</span>, [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">200</span>, <span class="number">200</span>], <span class="number">5</span>, [<span class="number">115</span>, <span class="number">15</span>, <span class="number">249</span>])</span><br><span class="line">sun = Objects(<span class="string">&quot;Sun&quot;</span>, <span class="number">1000</span>, [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">500</span>, <span class="number">600</span>], <span class="number">5</span>, [<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line">moon = Objects(<span class="string">&quot;Moon&quot;</span>, <span class="number">1000</span>, [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">500</span>, <span class="number">300</span>], <span class="number">5</span>, [<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>])</span><br><span class="line">mars = Objects(<span class="string">&quot;Mars&quot;</span>, <span class="number">1000</span>, [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">600</span>, <span class="number">400</span>], <span class="number">5</span>, [<span class="number">15</span>, <span class="number">215</span>, <span class="number">249</span>])</span><br><span class="line"></span><br><span class="line">universe.add_object(earth)</span><br><span class="line">universe.add_object(sun)</span><br><span class="line">universe.add_object(moon)</span><br><span class="line">universe.add_object(mars)</span><br><span class="line"></span><br><span class="line">universe.work_power()</span><br><span class="line">universe.work_force()</span><br><span class="line"></span><br><span class="line">pygame.init()</span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line">screen = pygame.display.set_mode([<span class="number">1500</span>, <span class="number">1200</span>])</span><br><span class="line">pygame.display.set_caption(<span class="string">&quot;Force&quot;</span>)</span><br><span class="line"></span><br><span class="line">keep = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> keep:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">            keep = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    screen.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    universe.work_power()</span><br><span class="line">    universe.work_force()</span><br><span class="line">    universe.display(screen, <span class="literal">True</span>)</span><br><span class="line">    universe.display_data(screen, clock)</span><br><span class="line"></span><br><span class="line">    pygame.display.update()</span><br><span class="line">    clock.tick(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">pygame.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><p>要实现V.1.0.10版就要添加功能：添加和移除物体<br>实际上就是添加一个方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_object</span>(<span class="params">self, scr, k</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw_mesh</span>(<span class="params">w, h, e, scr_, color</span>):</span><span class="comment"># 画网格</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, w, e):</span><br><span class="line">            pygame.draw.line(scr_, color, (n, <span class="number">0</span>), (n, h))</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, h, e):</span><br><span class="line">            pygame.draw.line(scr_, color, (<span class="number">0</span>, n), (w, n))</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, w, e * <span class="number">10</span>):</span><br><span class="line">            pygame.draw.line(scr_, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), (n, <span class="number">0</span>), (n, h), <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, h, e * <span class="number">10</span>):</span><br><span class="line">            pygame.draw.line(scr_, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), (<span class="number">0</span>, n), (w, n), <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw_mouse</span>(<span class="params">scr_</span>):</span></span><br><span class="line">        pygame.draw.line(scr_, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), (x, <span class="number">0</span>), (x, <span class="number">800</span>), <span class="number">2</span>)</span><br><span class="line">        pygame.draw.line(scr_, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, y), (<span class="number">1000</span>, y), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">display_data</span>(<span class="params">scr_, mx, my</span>):</span></span><br><span class="line">        font_ = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">        pos = font_.render(<span class="string">&quot;Pos: &quot;</span> + <span class="built_in">str</span>(mx) + <span class="string">&quot;  &quot;</span> + <span class="built_in">str</span>(my), <span class="literal">False</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">        scr_.blit(pos, (<span class="number">50</span>, <span class="number">50</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">adding_mode</span>(<span class="params">x_, y_</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">name_it</span>():</span></span><br><span class="line">            self.name_ = <span class="built_in">input</span>(<span class="string">&quot;Please name the object&quot;</span>)</span><br><span class="line">        named = Thread(target=name_it)</span><br><span class="line">        named.start()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">for</span> event__ <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">                <span class="keyword">if</span> event__.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            scr.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">            pygame.mouse.set_visible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 画数据</span></span><br><span class="line">            font_ = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">            fun_ = font_.render(<span class="string">&quot;Enter Object&#x27;s name&quot;</span>, <span class="literal">False</span>, (<span class="number">155</span>, <span class="number">155</span>, <span class="number">255</span>))</span><br><span class="line">            scr.blit(fun_, (<span class="number">550</span>, <span class="number">50</span>))</span><br><span class="line">            <span class="keyword">if</span> self.name_ != <span class="string">&quot;&quot;</span>:</span><br><span class="line">                new_object = Objects(self.name_, <span class="number">1000</span>, [<span class="number">0</span>, <span class="number">0</span>], [x_, y_], <span class="number">5</span>, [random.randint(<span class="number">55</span>, <span class="number">255</span>),</span><br><span class="line">                                                                             random.randint(<span class="number">55</span>, <span class="number">255</span>),</span><br><span class="line">                                                                             random.randint(<span class="number">55</span>, <span class="number">255</span>)])</span><br><span class="line">                self.add_object(new_object)</span><br><span class="line">                self.name_ = <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> k[pygame.K_a]:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">for</span> event_ <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">                <span class="keyword">if</span> event_.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            scr.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">            pygame.mouse.set_visible(<span class="literal">False</span>)     <span class="comment"># 隐藏鼠标</span></span><br><span class="line">            <span class="comment"># 画网格</span></span><br><span class="line">            x, y = pygame.mouse.get_pos()</span><br><span class="line">            screen.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">            draw_mesh(<span class="number">1000</span>, <span class="number">800</span>, <span class="number">20</span>, screen, (<span class="number">110</span>, <span class="number">110</span>, <span class="number">110</span>))</span><br><span class="line">            draw_mouse(scr)</span><br><span class="line">            display_data(scr, x, y)</span><br><span class="line">            <span class="comment"># 画数据</span></span><br><span class="line">            font = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">            fun = font.render(<span class="string">&quot;Press &#x27;q&#x27; to stop adding&quot;</span>, <span class="literal">False</span>, (<span class="number">155</span>, <span class="number">155</span>, <span class="number">255</span>))</span><br><span class="line">            scr.blit(fun, (<span class="number">550</span>, <span class="number">50</span>))</span><br><span class="line">            k = pygame.key.get_pressed()</span><br><span class="line">            <span class="keyword">if</span> pygame.mouse.get_pressed()[<span class="number">0</span>] == <span class="number">1</span>:</span><br><span class="line">                adding_mode(x, y)</span><br><span class="line">            <span class="comment"># 退出添加模式</span></span><br><span class="line">            <span class="keyword">if</span> k[pygame.K_q]:</span><br><span class="line">                pygame.mouse.set_visible(<span class="literal">True</span>)      <span class="comment"># 显示鼠标</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            pygame.display.update()</span><br><span class="line">    <span class="keyword">elif</span> k[pygame.K_m]:</span><br><span class="line">        f = <span class="literal">False</span></span><br><span class="line">        index = -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">name_it_</span>():</span></span><br><span class="line">            self.name_ = <span class="built_in">input</span>(<span class="string">&quot;Please enter the object&#x27;s name&quot;</span>)</span><br><span class="line"></span><br><span class="line">        named_ = Thread(target=name_it_)</span><br><span class="line">        named_.start()</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">for</span> event___ <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">                <span class="keyword">if</span> event___.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            scr.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">            pygame.mouse.set_visible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 画数据</span></span><br><span class="line">            font__ = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">            fun__ = font__.render(<span class="string">&quot;Enter Object&#x27;s name&quot;</span>, <span class="literal">False</span>, (<span class="number">155</span>, <span class="number">155</span>, <span class="number">255</span>))</span><br><span class="line">            scr.blit(fun__, (<span class="number">550</span>, <span class="number">50</span>))</span><br><span class="line">            <span class="keyword">if</span> self.name_ != <span class="string">&quot;&quot;</span>:</span><br><span class="line">                <span class="keyword">for</span> n_ <span class="keyword">in</span> self.objects:</span><br><span class="line">                    index += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> n_.name == self.name_:</span><br><span class="line">                        f = <span class="literal">True</span></span><br><span class="line">                        <span class="keyword">del</span> self.objects[index]</span><br><span class="line">                <span class="keyword">if</span> f:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;Find it and remove it!&quot;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;None!&quot;</span>)</span><br><span class="line">                self.name_ = <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            pygame.display.update()</span><br></pre></td></tr></table></figure><p>代码很好理解，就不再赘述<br>Ok，放V1.0.10版全部代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame, random</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">万有引力公式：</span></span><br><span class="line"><span class="string">F = G * (m1*m2)/r**2</span></span><br><span class="line"><span class="string">其中 F 为受某力的大小，m1,m2分别为两物体的质量，r为距离</span></span><br><span class="line"><span class="string">牛顿第二定律：</span></span><br><span class="line"><span class="string">F = am</span></span><br><span class="line"><span class="string">a为加速度</span></span><br><span class="line"><span class="string">m为物体质量</span></span><br><span class="line"><span class="string">推导公式：</span></span><br><span class="line"><span class="string">a = F/m</span></span><br><span class="line"><span class="string">m = F/a</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">G, PI = <span class="number">6.754</span>*<span class="number">0.00001</span>, <span class="number">3.14159265358979323</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">System</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    name = <span class="string">&quot;&quot;</span></span><br><span class="line">    objects = []</span><br><span class="line">    name_ = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_object</span>(<span class="params">self, obj</span>):</span></span><br><span class="line">        self.objects.append(obj)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work_power</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> obj <span class="keyword">in</span> self.objects:</span><br><span class="line">            obj.power = []</span><br><span class="line">            <span class="keyword">if</span> obj.speed == [<span class="number">0</span>, <span class="number">0</span>]:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                obj.speed[<span class="number">0</span>] = obj.speed[<span class="number">0</span>] * obj.mass</span><br><span class="line">                obj.speed[<span class="number">1</span>] = obj.speed[<span class="number">1</span>] * obj.mass</span><br><span class="line">                obj.power.append(obj.speed)</span><br><span class="line">            <span class="keyword">for</span> o <span class="keyword">in</span> self.objects:</span><br><span class="line">                v0 = o.position[<span class="number">0</span>] - obj.position[<span class="number">0</span>]</span><br><span class="line">                v1 = o.position[<span class="number">1</span>] - obj.position[<span class="number">1</span>]</span><br><span class="line">                distance_2 = v0 ** <span class="number">2</span> + v1 ** <span class="number">2</span></span><br><span class="line">                <span class="keyword">if</span> distance_2 == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    v0 *= G/distance_2*(obj.mass*o.mass)</span><br><span class="line">                    v1 *= G/distance_2*(obj.mass*o.mass)</span><br><span class="line">                    obj.power.append([v0, v1])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work_force</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> obj <span class="keyword">in</span> self.objects:</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(obj.power) - <span class="number">1</span>):</span><br><span class="line">                f1 = obj.power[<span class="number">0</span>]</span><br><span class="line">                f2 = obj.power[<span class="number">1</span>]</span><br><span class="line">                f_t = [f1[<span class="number">0</span>]+f2[<span class="number">0</span>], f1[<span class="number">1</span>]+f2[<span class="number">1</span>]]</span><br><span class="line">                <span class="keyword">del</span> obj.power[<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">del</span> obj.power[<span class="number">0</span>]</span><br><span class="line">                obj.power.append(f_t)</span><br><span class="line">            obj.position[<span class="number">0</span>] += obj.power[<span class="number">0</span>][<span class="number">0</span>]/obj.mass</span><br><span class="line">            obj.position[<span class="number">1</span>] += obj.power[<span class="number">0</span>][<span class="number">1</span>]/obj.mass</span><br><span class="line">            obj.speed = [obj.power[<span class="number">0</span>][<span class="number">0</span>]/obj.mass, obj.power[<span class="number">0</span>][<span class="number">1</span>]/obj.mass]</span><br><span class="line">            <span class="comment"># print(obj.speed)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">display</span>(<span class="params">self, scr, show_orbit, length=<span class="number">500</span></span>):</span></span><br><span class="line">        <span class="keyword">for</span> obj <span class="keyword">in</span> self.objects:</span><br><span class="line">            pygame.draw.circle(scr, obj.color, (<span class="built_in">int</span>(obj.position[<span class="number">0</span>]), <span class="built_in">int</span>(obj.position[<span class="number">1</span>])), obj.volume)</span><br><span class="line">            <span class="keyword">if</span> show_orbit:</span><br><span class="line">                obj.positions = obj.positions[:]</span><br><span class="line">                obj.positions.insert(<span class="number">0</span>, [<span class="built_in">int</span>(obj.position[<span class="number">0</span>]), <span class="built_in">int</span>(obj.position[<span class="number">1</span>])])</span><br><span class="line">                pygame.draw.aalines(scr, obj.color, <span class="literal">False</span>, obj.positions, <span class="number">3</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(obj.positions) &gt; length:</span><br><span class="line">                    <span class="keyword">del</span> obj.positions[-<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">elif</span> <span class="built_in">len</span>(obj.positions) &gt; <span class="built_in">len</span>(self.objects):</span><br><span class="line">                    <span class="keyword">if</span> obj.position_ <span class="keyword">in</span> obj.positions:</span><br><span class="line">                        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(self.objects)):</span><br><span class="line">                            <span class="keyword">del</span> obj.positions[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">display_data</span>(<span class="params">self, scr, c</span>):</span></span><br><span class="line">        font = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">        fps = font.render(<span class="string">&quot;FPS: &quot;</span>+<span class="built_in">str</span>(<span class="built_in">round</span>(c.get_fps(), <span class="number">2</span>)), <span class="literal">False</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">        fun = font.render(<span class="string">&quot;Press &#x27;a&#x27; to add a object&quot;</span>, <span class="literal">False</span>, (<span class="number">155</span>, <span class="number">155</span>, <span class="number">255</span>))</span><br><span class="line">        scr.blit(fun, (<span class="number">550</span>, <span class="number">50</span>))</span><br><span class="line">        fun = font.render(<span class="string">&quot;Press &#x27;m&#x27; to remove a object&quot;</span>, <span class="literal">False</span>, (<span class="number">155</span>, <span class="number">155</span>, <span class="number">255</span>))</span><br><span class="line">        scr.blit(fun, (<span class="number">550</span>, <span class="number">100</span>))</span><br><span class="line">        scr.blit(fps, (<span class="number">50</span>, <span class="number">50</span>))</span><br><span class="line">        <span class="keyword">if</span> self.objects:</span><br><span class="line">            <span class="keyword">for</span> index, obj <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.objects):</span><br><span class="line">                pos = font.render(obj.name+<span class="string">&quot;: &quot;</span>+<span class="built_in">str</span>(<span class="built_in">int</span>(obj.position[<span class="number">0</span>])) + <span class="string">&quot;  &quot;</span> +</span><br><span class="line">                                  <span class="built_in">str</span>(<span class="built_in">int</span>(obj.position[<span class="number">1</span>])), <span class="literal">False</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">                scr.blit(pos, (<span class="number">50</span>, <span class="number">80</span>+index*<span class="number">35</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_object</span>(<span class="params">self, scr, k</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">draw_mesh</span>(<span class="params">w, h, e, scr_, color</span>):</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, w, e):</span><br><span class="line">                pygame.draw.line(scr_, color, (n, <span class="number">0</span>), (n, h))</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, h, e):</span><br><span class="line">                pygame.draw.line(scr_, color, (<span class="number">0</span>, n), (w, n))</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, w, e * <span class="number">10</span>):</span><br><span class="line">                pygame.draw.line(scr_, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), (n, <span class="number">0</span>), (n, h), <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, h, e * <span class="number">10</span>):</span><br><span class="line">                pygame.draw.line(scr_, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), (<span class="number">0</span>, n), (w, n), <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">draw_mouse</span>(<span class="params">scr_</span>):</span></span><br><span class="line">            pygame.draw.line(scr_, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), (x, <span class="number">0</span>), (x, <span class="number">800</span>), <span class="number">2</span>)</span><br><span class="line">            pygame.draw.line(scr_, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, y), (<span class="number">1000</span>, y), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">display_data</span>(<span class="params">scr_, mx, my</span>):</span></span><br><span class="line">            font_ = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">            pos = font_.render(<span class="string">&quot;Pos: &quot;</span> + <span class="built_in">str</span>(mx) + <span class="string">&quot;  &quot;</span> + <span class="built_in">str</span>(my), <span class="literal">False</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">            scr_.blit(pos, (<span class="number">50</span>, <span class="number">50</span>))</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">adding_mode</span>(<span class="params">x_, y_</span>):</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">name_it</span>():</span></span><br><span class="line">                self.name_ = <span class="built_in">input</span>(<span class="string">&quot;Please name the object&quot;</span>)</span><br><span class="line">            named = Thread(target=name_it)</span><br><span class="line">            named.start()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">for</span> event__ <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">                    <span class="keyword">if</span> event__.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                scr.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">                pygame.mouse.set_visible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 画数据</span></span><br><span class="line">                font_ = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">                fun_ = font_.render(<span class="string">&quot;Enter Object&#x27;s name&quot;</span>, <span class="literal">False</span>, (<span class="number">155</span>, <span class="number">155</span>, <span class="number">255</span>))</span><br><span class="line">                scr.blit(fun_, (<span class="number">550</span>, <span class="number">50</span>))</span><br><span class="line">                <span class="keyword">if</span> self.name_ != <span class="string">&quot;&quot;</span>:</span><br><span class="line">                    new_object = Objects(self.name_, <span class="number">1000</span>, [<span class="number">0</span>, <span class="number">0</span>], [x_, y_], <span class="number">5</span>, [random.randint(<span class="number">55</span>, <span class="number">255</span>),</span><br><span class="line">                                                                                 random.randint(<span class="number">55</span>, <span class="number">255</span>),</span><br><span class="line">                                                                                 random.randint(<span class="number">55</span>, <span class="number">255</span>)])</span><br><span class="line">                    self.add_object(new_object)</span><br><span class="line">                    self.name_ = <span class="string">&quot;&quot;</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> k[pygame.K_a]:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">for</span> event_ <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">                    <span class="keyword">if</span> event_.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                scr.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">                pygame.mouse.set_visible(<span class="literal">False</span>)     <span class="comment"># 隐藏鼠标</span></span><br><span class="line">                <span class="comment"># 画网格</span></span><br><span class="line">                x, y = pygame.mouse.get_pos()</span><br><span class="line">                screen.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">                draw_mesh(<span class="number">1000</span>, <span class="number">800</span>, <span class="number">20</span>, screen, (<span class="number">110</span>, <span class="number">110</span>, <span class="number">110</span>))</span><br><span class="line">                draw_mouse(scr)</span><br><span class="line">                display_data(scr, x, y)</span><br><span class="line">                <span class="comment"># 画数据</span></span><br><span class="line">                font = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">                fun = font.render(<span class="string">&quot;Press &#x27;q&#x27; to stop adding&quot;</span>, <span class="literal">False</span>, (<span class="number">155</span>, <span class="number">155</span>, <span class="number">255</span>))</span><br><span class="line">                scr.blit(fun, (<span class="number">550</span>, <span class="number">50</span>))</span><br><span class="line">                k = pygame.key.get_pressed()</span><br><span class="line">                <span class="keyword">if</span> pygame.mouse.get_pressed()[<span class="number">0</span>] == <span class="number">1</span>:</span><br><span class="line">                    adding_mode(x, y)</span><br><span class="line">                <span class="comment"># 退出添加模式</span></span><br><span class="line">                <span class="keyword">if</span> k[pygame.K_q]:</span><br><span class="line">                    pygame.mouse.set_visible(<span class="literal">True</span>)      <span class="comment"># 显示鼠标</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                pygame.display.update()</span><br><span class="line">        <span class="keyword">elif</span> k[pygame.K_m]:</span><br><span class="line">            f = <span class="literal">False</span></span><br><span class="line">            index = -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">name_it_</span>():</span></span><br><span class="line">                self.name_ = <span class="built_in">input</span>(<span class="string">&quot;Please enter the object&#x27;s name&quot;</span>)</span><br><span class="line"></span><br><span class="line">            named_ = Thread(target=name_it_)</span><br><span class="line">            named_.start()</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">for</span> event___ <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">                    <span class="keyword">if</span> event___.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                scr.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">                pygame.mouse.set_visible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 画数据</span></span><br><span class="line">                font__ = pygame.font.SysFont(<span class="string">&quot;Consolas&quot;</span>, <span class="number">25</span>)</span><br><span class="line">                fun__ = font__.render(<span class="string">&quot;Enter Object&#x27;s name&quot;</span>, <span class="literal">False</span>, (<span class="number">155</span>, <span class="number">155</span>, <span class="number">255</span>))</span><br><span class="line">                scr.blit(fun__, (<span class="number">550</span>, <span class="number">50</span>))</span><br><span class="line">                <span class="keyword">if</span> self.name_ != <span class="string">&quot;&quot;</span>:</span><br><span class="line">                    <span class="keyword">for</span> n_ <span class="keyword">in</span> self.objects:</span><br><span class="line">                        index += <span class="number">1</span></span><br><span class="line">                        <span class="keyword">if</span> n_.name == self.name_:</span><br><span class="line">                            f = <span class="literal">True</span></span><br><span class="line">                            <span class="keyword">del</span> self.objects[index]</span><br><span class="line">                    <span class="keyword">if</span> f:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;Find it and remove it!&quot;</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;None!&quot;</span>)</span><br><span class="line">                    self.name_ = <span class="string">&quot;&quot;</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                pygame.display.update()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Objects</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    mass = <span class="number">0</span>        <span class="comment"># 质量</span></span><br><span class="line">    power = []      <span class="comment"># 受到的力，矢量[大小，方向]</span></span><br><span class="line">    speed = []      <span class="comment"># 初速度，矢量[大小，方向]</span></span><br><span class="line">    position = []   <span class="comment"># 位置</span></span><br><span class="line">    position_ = []  <span class="comment"># 最初位置</span></span><br><span class="line">    move_to = []    <span class="comment"># 下一帧移动的距离，方向</span></span><br><span class="line">    positions = []  <span class="comment"># 所有的点</span></span><br><span class="line">    volume = <span class="number">0</span>      <span class="comment"># 体积</span></span><br><span class="line">    color = []      <span class="comment"># 颜色</span></span><br><span class="line">    name = <span class="string">&quot;&quot;</span>       <span class="comment"># 名字</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, mass, speed, position, volume, color</span>):</span></span><br><span class="line">        self.mass = mass</span><br><span class="line">        self.position = position</span><br><span class="line">        self.volume = volume</span><br><span class="line">        self.speed = speed</span><br><span class="line">        self.color = color</span><br><span class="line">        self.name = name</span><br><span class="line">        self.positions.append(position[:])</span><br><span class="line">        self.position_ = position[:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">universe = System(<span class="string">&quot;Earth University&quot;</span>)</span><br><span class="line"></span><br><span class="line">universe.work_power()</span><br><span class="line">universe.work_force()</span><br><span class="line"></span><br><span class="line">pygame.init()</span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line">screen = pygame.display.set_mode([<span class="number">1000</span>, <span class="number">800</span>])</span><br><span class="line">pygame.display.set_caption(<span class="string">&quot;Force&quot;</span>)</span><br><span class="line"></span><br><span class="line">keep = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> keep:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">            keep = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    screen.fill((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    universe.work_power()</span><br><span class="line">    universe.work_force()</span><br><span class="line">    universe.display(screen, <span class="literal">True</span>)</span><br><span class="line">    universe.display_data(screen, clock)</span><br><span class="line"></span><br><span class="line">    pygame.display.update()</span><br><span class="line">    clock.tick(<span class="number">200</span>)</span><br><span class="line">    key = pygame.key.get_pressed()</span><br><span class="line">    universe.set_object(screen, key)</span><br><span class="line"></span><br><span class="line">pygame.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>转载请声明来处.</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python 三体 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
